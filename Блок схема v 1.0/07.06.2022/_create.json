{"blocks":[{"x":1250,"y":430,"text":"получить массив уже созданных страниц из wepack/pages.js\nexistedPages = arrFromPages.js","width":380,"height":40,"type":"Блок","isMenuBlock":false,"fontSize":14,"textHeight":14,"isBold":false,"isItalic":false,"textAlign":"center","labelsPosition":1},{"x":1250,"y":540,"text":"existedPages.includes(BEMentityTitle)","width":300,"height":100,"type":"Условие","isMenuBlock":false,"fontSize":14,"textHeight":14,"isBold":false,"isItalic":false,"textAlign":"center","labelsPosition":3},{"x":1250,"y":670,"text":"Вписываем в массив pages.js новую страничку \nс именем BEMentityTitle","width":380,"height":40,"type":"Блок","isMenuBlock":false,"fontSize":14,"textHeight":14,"isBold":false,"isItalic":false,"textAlign":"center","labelsPosition":1},{"x":-1100,"y":1160,"text":"this.blocks.push(new Block(BEMentityTitle) )","width":300,"height":40,"type":"Блок","isMenuBlock":false,"fontSize":14,"textHeight":14,"isBold":false,"isItalic":false,"textAlign":"center","labelsPosition":1},{"x":-1100,"y":1040,"text":"this.blocks.includes(BEMentityTitle)","width":300,"height":100,"type":"Условие","isMenuBlock":false,"fontSize":14,"textHeight":14,"isBold":false,"isItalic":false,"textAlign":"center","labelsPosition":3},{"x":-1050,"y":1380,"text":"Создаём переменные: \nдля цвета шрифта $BEMentityTitle--Color = $black;\nдля цвета фона3 $BEMentityTitle--Color = $black;\nи записываем их в colors.scss с помощью подпрограммы \ncreateWritingIfItIsntInFile()\nЗаписываем в pug что это mixin и то что modifier = {};\nтакже записываем необходиммые заппси в scss и js файлы","width":380,"height":100,"type":"Блок","isMenuBlock":false,"fontSize":14,"textHeight":14,"isBold":false,"isItalic":false,"textAlign":"center","labelsPosition":1},{"x":-1050,"y":1250,"text":"createWritingIfItIsntInFIle(returnStringForImport(`pug`, `blockToAllblocksContainer`, `BEMentityTitle`) , pathToAllBlocks.pug,`top`)\ncreateWritingIfItIsntInFIle(returnStringForImport(`scss`, `blockToAllblocksContainer`, `BEMentityTitle`) , pathToAllBlocks.pug,`top`)\ncreateWritingIfItIsntInFIle(returnStringForImport(`js`, `blockToAllblocksContainer`, `BEMentityTitle`) , pathToAllBlocks.pug,`top`)","width":960,"height":60,"type":"Блок","isMenuBlock":false,"fontSize":14,"textHeight":14,"isBold":false,"isItalic":false,"textAlign":"center","labelsPosition":1},{"x":850,"y":300,"text":"className == 'page'","width":220,"height":180,"type":"Условие","isMenuBlock":false,"fontSize":14,"textHeight":14,"isBold":false,"isItalic":false,"textAlign":"center","labelsPosition":1},{"x":450,"y":300,"text":"returnStringForImport = returnStringForImport;\ncreateWritingIfItIsntInFIle = createWritingIfItIsntInFIle;\n//Записываем функцию в переменную","width":380,"height":60,"type":"Подпрограмма","isMenuBlock":false,"fontSize":14,"textHeight":14,"isBold":false,"isItalic":false,"textAlign":"center","labelsPosition":1},{"x":-1050,"y":1480,"text":"конец","width":100,"height":30,"type":"Начало / конец","isMenuBlock":false,"fontSize":14,"textHeight":14,"isBold":false,"isItalic":false,"textAlign":"center","labelsPosition":1},{"x":850,"y":80,"text":"_create(BEMentityTitle[, className])\n\nBEMentityTitle- строка, которая может включать в себя title какой-либо сущности (блок или page).\nЕсли указан className [block, page]- то будет создана та сущность, класс которой указан в className\n\nЕсли передана строка типа tag.blockName<pug.variables>{__tag.elementName<pug.variables>_modifierName<colors>} tab.blockName<> \nили numberOfBlock{__tab.elementName<> _modifierName<colors>} \nто строка будет разбита и созданы (если не существуют) блок элемент и модификатор с переменными.\n","width":940,"height":140,"type":"Начало / конец","isMenuBlock":false,"fontSize":14,"textHeight":14,"isBold":false,"isItalic":false,"textAlign":"center","labelsPosition":1},{"x":-190,"y":580,"text":"Возможные варианты str (синтаксиса)\ntag.blockName<pug.variables>{__tag.elementName<pug.variables>_modifierName<colors>} tab.blockName<> \nblockName<pug.variables>{__tag.elementName<pug.variables>_modifierName<colors>} tab.blockName<> \nblockName{__tag.elementName<pug.variables>_modifierName<colors>} tab.blockName<> \n1{__tag.elementName<pug.variables>_modifierName<colors>} tab.blockName<> \ntag.blockName<pug.variables tab.blockName<> ","width":710,"height":100,"type":"Текст / комментарий","isMenuBlock":false,"fontSize":14,"textHeight":14,"isBold":false,"isItalic":false,"textAlign":"left","labelsPosition":1},{"x":-1100,"y":450,"text":"createBEMEntities(str)\n\nданная функция принимает строку, которую разбивает и создаёт в соотвествии с синтаксисом сущности БЭМ\n\nСинтаксис - tag.blockName<pug.variables>{__tag.elementName<pug.variables>_modifierName<colors>} tab.blockName<> \n\nили numberOfBlock{__tab.elementName<> _modifierName<colors>} ","width":900,"height":120,"type":"Начало / конец","isMenuBlock":false,"fontSize":14,"textHeight":14,"isBold":false,"isItalic":false,"textAlign":"center","labelsPosition":1},{"x":-300,"y":720,"text":"Нужно разбить на бэм строки, в каждой бэм строке только один блок и возможно \nесть внутреннее содержимое в фигурных скобочках {} но как это сделать?","width":550,"height":40,"type":"Текст / комментарий","isMenuBlock":false,"fontSize":14,"textHeight":14,"isBold":false,"isItalic":false,"textAlign":"left","labelsPosition":1},{"x":450,"y":520,"text":"createBEMEntities(BEMentityTitle)","width":240,"height":40,"type":"Подпрограмма","isMenuBlock":false,"fontSize":14,"textHeight":14,"isBold":false,"isItalic":false,"textAlign":"center","labelsPosition":1},{"x":1250,"y":300,"text":"createBEMFiles(pathToPages,BEMentityTitle, {\npug: \"textForPugForPages\",\nscss: \"textForScssForPages\",\njs: \"textForJsForPages\"}","width":400,"height":60,"type":"Подпрограмма","isMenuBlock":false,"fontSize":14,"textHeight":14,"isBold":false,"isItalic":false,"textAlign":"center","labelsPosition":1},{"x":-1100,"y":930,"text":"createBEMFiles(pathToBlocks,BEMentityTitle, {\npug: \"textForPugForBlocks\",\nscss: \"textForScssForBlocks\",\njs: \"textForJsForBlocks\"}","width":400,"height":60,"type":"Подпрограмма","isMenuBlock":false,"fontSize":14,"textHeight":14,"isBold":false,"isItalic":false,"textAlign":"center","labelsPosition":1},{"x":1250,"y":780,"text":"конец","width":100,"height":50,"type":"Начало / конец","isMenuBlock":false,"fontSize":14,"textHeight":14,"isBold":false,"isItalic":false,"textAlign":"center","labelsPosition":1}],"arrows":[{"startIndex":0,"endIndex":1,"startConnectorIndex":2,"endConnectorIndex":0,"nodes":[{"x":1250,"y":450},{"x":1250,"y":470},{"x":1250,"y":490}],"counts":[1,1,1]},{"startIndex":15,"endIndex":0,"startConnectorIndex":2,"endConnectorIndex":0,"nodes":[{"x":1250,"y":330},{"x":1250,"y":390},{"x":1250,"y":410}],"counts":[1,1,1]},{"startIndex":1,"endIndex":2,"startConnectorIndex":2,"endConnectorIndex":0,"nodes":[{"x":1250,"y":590},{"x":1250,"y":630},{"x":1250,"y":650}],"counts":[1,1,1]},{"startIndex":1,"endIndex":17,"startConnectorIndex":1,"endConnectorIndex":1,"nodes":[{"x":1400,"y":540},{"x":1450,"y":540},{"x":1450,"y":780},{"x":1320,"y":780},{"x":1300,"y":780}],"counts":[1,1,1,1,1]},{"startIndex":10,"endIndex":7,"startConnectorIndex":2,"endConnectorIndex":0,"nodes":[{"x":850,"y":150},{"x":850,"y":190},{"x":850,"y":210}],"counts":[1,1,1]},{"startIndex":7,"endIndex":15,"startConnectorIndex":1,"endConnectorIndex":3,"nodes":[{"x":960,"y":300},{"x":1030,"y":300},{"x":1050,"y":300}],"counts":[1,1,1]},{"startIndex":7,"endIndex":8,"startConnectorIndex":3,"endConnectorIndex":1,"nodes":[{"x":740,"y":300},{"x":660,"y":300},{"x":640,"y":300}],"counts":[1,1,1]},{"startIndex":5,"endIndex":9,"startConnectorIndex":2,"endConnectorIndex":0,"nodes":[{"x":-1050,"y":1430},{"x":-1050,"y":1450},{"x":-1050,"y":1465}],"counts":[1,1,1]},{"startIndex":6,"endIndex":5,"startConnectorIndex":2,"endConnectorIndex":0,"nodes":[{"x":-1050,"y":1280},{"x":-1050,"y":1310},{"x":-1050,"y":1330}],"counts":[1,1,1]},{"startIndex":12,"endIndex":16,"startConnectorIndex":2,"endConnectorIndex":0,"nodes":[{"x":-1100,"y":510},{"x":-1100,"y":880},{"x":-1100,"y":900}],"counts":[1,1,1]},{"startIndex":3,"endIndex":6,"startConnectorIndex":2,"endConnectorIndex":0,"nodes":[{"x":-1100,"y":1180},{"x":-1100,"y":1200},{"x":-1050,"y":1200},{"x":-1050,"y":1220}],"counts":[1,1,1,1]},{"startIndex":4,"endIndex":6,"startConnectorIndex":1,"endConnectorIndex":0,"nodes":[{"x":-950,"y":1040},{"x":-930,"y":1040},{"x":-930,"y":1200},{"x":-1050,"y":1200},{"x":-1050,"y":1220}],"counts":[1,1,1,1,1]},{"startIndex":16,"endIndex":4,"startConnectorIndex":2,"endConnectorIndex":0,"nodes":[{"x":-1100,"y":960},{"x":-1100,"y":970},{"x":-1100,"y":990}],"counts":[1,1,1]},{"startIndex":4,"endIndex":3,"startConnectorIndex":2,"endConnectorIndex":0,"nodes":[{"x":-1100,"y":1090},{"x":-1100,"y":1120},{"x":-1100,"y":1140}],"counts":[1,1,1]},{"startIndex":8,"endIndex":14,"startConnectorIndex":2,"endConnectorIndex":0,"nodes":[{"x":450,"y":330},{"x":450,"y":480},{"x":450,"y":500}],"counts":[1,1,1]},{"startIndex":14,"endIndex":17,"startConnectorIndex":2,"endConnectorIndex":3,"nodes":[{"x":450,"y":540},{"x":450,"y":780},{"x":1180,"y":780},{"x":1200,"y":780}],"counts":[1,1,1,1]},{"startIndex":2,"endIndex":17,"startConnectorIndex":2,"endConnectorIndex":0,"nodes":[{"x":1250,"y":690},{"x":1250,"y":740},{"x":1250,"y":755}],"counts":[1,1,1]}],"x0":1594,"y0":-177}